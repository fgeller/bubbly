version: "3.8"

volumes:
  postgres-data:

services:

  # One of the Store options for Bubbly
  postgres:
    image: postgres:13.0
    container_name: postgres
    environment:
      POSTGRES_USER: "${POSTGRES_USER:-postgres}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-postgres}"
      POSTGRES_DB: "${POSTGRES_DATABASE:-bubbly}"
    networks:
      - bubbly-net
    ports:
      - "5432:5432"
    command:
      - "postgres"
      - "-c"
      - "log_statement=all"
    volumes:
      - type: volume
        source: postgres-data
        target: /var/lib/postgresql/data

  # Grafana with GraphQL plugin
  grafana:
    image: grafana/grafana:7.3.7
    container_name: grafana
    networks:
      - bubbly-net
    environment:
      GF_INSTALL_PLUGINS: "fifemon-graphql-datasource"
    ports:
      - "3000:3000"
    volumes:
      - type: bind
        read_only: true
        source: "./grafana/provisioning/datasources"
        target: "/etc/grafana/provisioning/datasources"

  # One of the Store options for Bubbly
  cockroachdb:
    image: cockroachdb/cockroach:v20.2.4
    container_name: cockroachdb
    command: ["start-single-node", "--insecure"]
    networks:
      - bubbly-net
    ports:
      - "8080:8080"
      - "26257:26257"

  # Bubbly server
  bubbly:
    depends_on:
      - "${BUBBLY_STORE_PROVIDER:-postgres}"
    container_name: bubbly
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      BUBBLY_STORE_PROVIDER: "${BUBBLY_STORE_PROVIDER:-postgres}"
    networks:
      - bubbly-net
    ports:
      - "8111:8111"
    command:
      - "agent"
      - "--debug"
  # A GraphQL interface into Bubbly Store
  storefront:
    container_name: storefront
    depends_on:
      - "bubbly"
    build:
      context: .
      dockerfile: storefront/Dockerfile
    environment:
      BUBBLY_HOST: "bubbly"
    networks:
      - bubbly-net
    ports:
      - "8112:8112"

# User-defined bridge network is different from the default bridge
networks:
  bubbly-net:
    driver: bridge
    internal: false
